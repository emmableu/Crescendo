/ /pictures from https://scratch.mit.edu/projects/editor/?tutorial=getStarted

doctype html

- if current_user
  - @next_task = current_user.progression/3 + 1
  - if @next_task == 3
    - @next_task = 2.5
- else
  - @next_task = 3
  / console.log(#{@next_task})
- if current_admin
  .table
    table.table.table-striped
      thead
        tr
          / th
          th Category Name
          th Task
          / th Consumer Key
          th testfile
          th Edit
          th Delete

      tbody
        - @categories.each do |category|
          - @categorytasks[category].each do |categorytask|
            tr
              / td.vert-align = category.Name
              td.vert-align = link_to "#{category.name}", category
              / td.vert-align = course.url
              td.vert-align = link_to "#{categorytask.title}", categorytask
              - if categorytask.test_file
                td.vert-align
                  = link_to "#{categorytask.test_file[0,100]}", test_file_task_path(categorytask), :maxlength => 3, :size => 10
              - else
                td.vert-align = "no test file yet"
                / = link_to "Enter a correct script to get test file", correctscript_task_path(categorytask)
              / td.vert-align = 'Edit'
              / td.vert-align = 'Delete'
              td.vert-align = link_to 'Edit', edit_task_path(categorytask)
              td.vert-align = link_to raw('<strong>&times;</strong>'), categorytask, class: "btn btn-danger", data: {:confirm => 'Are you sure?'}, :method => :delete
  br
  a.btn.btn-success(href=new_task_path role='button')
    | New Task








- else
= render 'index_header'

head
  / title Bootstrap Example
  meta charset="utf-8" /
  meta content="width=device-width, initial-scale=1" name="viewport" /
  link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet" /


body
  css:
    body{
      background-color: #0c1021
    }

    .overlay-after2 {
      opacity: 0.95;
      background-color: #232323;
      position: fixed;
      width: 100%;
      height: 100%;
      top: 0px;
      left: 0px;
      z-index: 2000;
      color: white;
      font-size: 30px;
      /*text-align: center;*/
    }
    img {
      /*width: 3vw;*/
      /*height: 5vh;*/
      /*width: 20%;*/
      /*height: auto;*/
      width: 18rem;
      object-fit: cover;
    }
    .entire-card {
      color: #f2eeff;
      width: 18rem;
      height: auto;
    }

    .card.border-secondary{
      width: 18rem;
    }

    .entire-card:hover {
      color: #f2eeff;
    }
    .card-body {
      width: 18rem;
      font-family: serif;
      font-size: 15px;
      text-align: center;
      background-color: #0c1021
    }
    .album.text_muted{
      position: absolute;
    }

    @-webkit-keyframes greenPulse {
      from {
        background-color: #ffe72e;
        -webkit-box-shadow: 0 0 80px #ffdf1a;
      }
      50% {
        background-color: #ffe31b;
        -webkit-box-shadow: 0 0 160px #ffd714;
      }
      to {
        background-color: #ffdf1a;
        -webkit-box-shadow: 0 0 80px #ffd722;
      }
    }

    .greenPulse.button {
      -webkit-animation-iteration-count: infinite;
      -webkit-animation-name: greenPulse;
      -webkit-animation-duration: 2s;
    }
    .middle-center{
      position: relative;
      left: 10%;
      width: 80%;
      /*right: 10%;*/
      top: 30%;
    }
    .green-text{
      color:deepskyblue;
    }


  - if @next_task == 2.5
    .overlay-after2
      .middle-center
        p Congratulations! You have successfully finished the 2 challenges in your programming warm-up!
        p
          |Use this url:
          a.green-text href="http://go.ncsu.edu/art-contest" target="_blank"  go.ncsu.edu/art-contest
          |  to draw a cool picture in Snap! You can read more about composing this art on the item 3 of
          a.green-text href="http://go.ncsu.edu/camp" target="_blank" go.ncsu.edu/camp



  - if @next_task == 7
    .overlay-after2
      .middle-center
        p Congratulations! You have successfully finished all of today's programming challenges!
        p
          |Use this url:
          a.green-text href="http://go.ncsu.edu/frogger" target="_blank"  go.ncsu.edu/frogger
          |  to design your own frogger game! You can read more about the instruction of this game design on the item 10 of
          a.green-text href="http://go.ncsu.edu/camp" target="_blank" go.ncsu.edu/camp



  br
  br
  br
  / .album.text_muted
  /   svg
  /     line id = 'line1' stroke="red" stroke-width = 3
  .album.text-muted
    .container
      - @categories.each do |category|
        .row.mt-auto.justify-content-center
          .card-deck

            - if category.name == 'loop'
              - @categorytasks[category].each do |categorytask|
                - if categorytask.order == @next_task
                  a.entire-card href="#{minitask_path(@minitask1[categorytask])}"
                    .card.border-secondary.mx-4.mb-5.greenPulse.button
                      |#{image_tag(categorytask.title)}
                      .card-body
                        strong.card-text ="#{categorytask.order} - #{categorytask.title}"
                - elsif categorytask.order < @next_task
                  a.entire-card
                    .card.border-secondary.mx-4.mb-5
                      |#{image_tag("Pass" + categorytask.title)}
                      .card-body
                        strong.card-text =  "#{categorytask.order} - #{categorytask.title}"
                - else
                  a.entire-card
                    .card.border-secondary.mx-4.mb-5
                      |#{image_tag("Blur" + categorytask.title)}
                      .card-body
                        strong.card-text = "#{categorytask.order} - #{categorytask.title}"

                .card.invisible.mx-4.mb-5
                  |#{image_tag(categorytask.title)}
                  .card-body
                    strong.card-text = "#{categorytask.title}"
            - else

              - @categorytasks[category].each do |categorytask|
                .card.invisible.mx-4.mb-5
                  |#{image_tag(categorytask.title)}
                  .card-body
                    strong.card-text = "#{categorytask.title}"

                - if categorytask.order == @next_task
                  a.entire-card href="#{minitask_path(@minitask1[categorytask])}"
                      .card.border-secondary.mx-4.mb-5.greenPulse.button
                        |#{image_tag(categorytask.title)}
                        .card-body
                          strong.card-text = "#{categorytask.order} - #{categorytask.title}"
                - elsif categorytask.order < @next_task
                  a.entire-card
                    .card.border-secondary.mx-4.mb-5
                      |#{image_tag("Pass" + categorytask.title)}
                      .card-body
                        strong.card-text =  "#{categorytask.order} - #{categorytask.title}"
                - else
                  a.entire-card
                    .card.border-secondary.mx-4.mb-5
                      |#{image_tag("Blur" + categorytask.title)}
                      .card-body
                        strong.card-text = "#{categorytask.order} - #{categorytask.title}"
